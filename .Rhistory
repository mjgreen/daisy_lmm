mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_"))
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_"))
d
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(serial_position=as.numeric(NA))
d
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(serial_position=as.numeric(NA)) %>%
mutate(accuracy=as.numeric(NA))
d
d
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(serial_position=as.numeric(NA)) %>%
mutate(accuracy=as.numeric(NA)) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), )
d
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(serial_position=as.numeric(NA)) %>%
mutate(accuracy=as.numeric(NA)) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to=accuracy)
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(serial_position=as.numeric(NA)) %>%
mutate(accuracy=as.numeric(NA)) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy")
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(serial_position=as.numeric(NA)) %>%
#mutate(accuracy=as.numeric(NA)) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy")
d
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
#mutate(serial_position=as.numeric(NA)) %>%
#mutate(accuracy=as.numeric(NA)) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy")
d
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
#mutate(serial_position=as.numeric(NA)) %>%
#mutate(accuracy=as.numeric(NA)) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position")
d
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
#mutate(serial_position=as.numeric(NA)) %>%
#mutate(accuracy=as.numeric(NA)) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position") %>%
mutate(serial_position = readr::parse_number(serial_position))
d
subset(d, participant==1)
subset(d, participant==1 & Block==1)
subset(d, participant==1 & Block==1) %>% view()
72/6
d=din %>%
rename(participant=PS) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position") %>%
mutate(serial_position = readr::parse_number(serial_position))
view(d)
d=din %>%
rename(participant=PS) %>%
rename(block=Block) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position") %>%
mutate(serial_position = readr::parse_number(serial_position))
view(d)
d
d=din %>%
rename(participant=PS) %>%
rename(block=Block) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position") %>%
mutate(serial_position = readr::parse_number(serial_position)) %>%
mutate(participant=as_factor(participant)) %>%
mutate(block=as_factor(block)) %>%
mutate(priority=as_factor(priority)) %>%
mutate(suffix=as_factor(suffix)) %>%
mutate(serial_position=as_factor(serial_position))
view(d)
d
library(lme4)
m1=lmer(data=d,
accuracy ~ serial_position + suffix + priority +
(1|participant))
m1
summary(m1)
m1=lmerTest::lmer(data=d,
accuracy ~ serial_position + suffix + priority +
(1|participant))
summary(m1)
levels(d$priority)
source("~/gits/daisy/script1.R")
summary(m1)
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
unique(d$priority)
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
d=din %>%
rename(participant=PS) %>%
rename(block=Block) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_"))
d
view(d)
d=din %>%
rename(participant=PS) %>%
rename(block=Block) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(trial=1:48) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position") %>%
mutate(serial_position = readr::parse_number(serial_position)) %>%
mutate(participant=as_factor(participant)) %>%
mutate(block=as_factor(block)) %>%
mutate(priority = factor(priority, levels=c("no_priority", "p5"), labels=c("NoPriority", "PrioritiseP5"))) %>%
mutate(suffix = factor(suffix, levels=c("no_suffix", "suffix"), labels=c("Absent", "Present"))) %>%
mutate(serial_position=as_factor(serial_position))
d=din %>%
rename(participant=PS) %>%
rename(block=Block) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(trial=1:48)
d=din %>%
rename(participant=PS) %>%
rename(block=Block) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(trial=seq_along(participant)) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position") %>%
mutate(serial_position = readr::parse_number(serial_position)) %>%
mutate(participant=as_factor(participant)) %>%
mutate(block=as_factor(block)) %>%
mutate(priority = factor(priority, levels=c("no_priority", "p5"), labels=c("NoPriority", "PrioritiseP5"))) %>%
mutate(suffix = factor(suffix, levels=c("no_suffix", "suffix"), labels=c("Absent", "Present"))) %>%
mutate(serial_position=as_factor(serial_position))
d
d=din %>%
rename(participant=PS) %>%
rename(block=Block) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
mutate(trial=seq_along(participant)) %>%
relocate(participant, block, trial) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position") %>%
mutate(serial_position = readr::parse_number(serial_position)) %>%
mutate(participant=as_factor(participant)) %>%
mutate(block=as_factor(block)) %>%
mutate(priority = factor(priority, levels=c("no_priority", "p5"), labels=c("NoPriority", "PrioritiseP5"))) %>%
mutate(suffix = factor(suffix, levels=c("no_suffix", "suffix"), labels=c("Absent", "Present"))) %>%
mutate(serial_position=as_factor(serial_position))
source("~/gits/daisy/script1.R")
view(d)
source("~/gits/daisy/script1.R")
d
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
2304*48*4
nrow(d)
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
d=din %>%
rename(participant=PS) %>%
rename(block=Block) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
group_by(participant) %>%
mutate(trial=seq_along(participant)) %>%
ungroup() %>%
mutate(trial=as_factor(trial)) %>%
relocate(participant, block, trial) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position") %>%
mutate(serial_position = readr::parse_number(serial_position)) %>%
mutate(participant=as_factor(participant)) %>%
#mutate(block=as_factor(block)) %>%
#mutate(serial_position=as_factor(serial_position))
mutate(priority = factor(priority, levels=c("no_priority", "p5"), labels=c("NoPriority", "PrioritiseP5"))) %>%
mutate(suffix = factor(suffix, levels=c("no_suffix", "suffix"), labels=c("Absent", "Present")))
view(d)
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
m1=lmerTest::lmer(data=d,
accuracy ~ block + serial_position + suffix + priority +
(1+serial_position + suffix + priority | participant) +
(1 | trial)
)
print(summary(m1))
m1=lmerTest::lmer(data=d,
accuracy ~ block + serial_position + suffix + priority +
(1 + suffix + priority | participant) +
(1 | trial)
)
print(summary(m1))
48*48
48*48*6
ggplot(data=d, aes(y=accuracy, x=serial_position))+
stat_summary()
ggplot(data=d, aes(y=accuracy, x=serial_position, group=priority))+
stat_summary()
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary()
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary()+
theme_bw()
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary()+
theme_bw()+theme(panel.grid=element_blank())
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary()+
stat_summary(geom='line')+
theme_bw()+theme(panel.grid=element_blank())
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary(fun=mean_se)+
stat_summary(geom='line')+
theme_bw()+theme(panel.grid=element_blank())
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary(fun="mean_se")+
stat_summary(geom='line')+
theme_bw()+theme(panel.grid=element_blank())
stat_summary()
?stat_summary()
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary(fun.data="mean_se")+
stat_summary(geom='line')+
theme_bw()+theme(panel.grid=element_blank())
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary(fun.data="mean_se")+
stat_summary(fun.data="mean_se", geom='line')+
theme_bw()+theme(panel.grid=element_blank())
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary(fun.data="mean_se")+
stat_summary(fun.data="mean_se", geom='line')+
theme_bw()+theme(panel.grid=element_blank())+
labs(title = "Accuracy improves at position 5 (but not at other positions) when it is prioritised versus when it is not prioritised")
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
stat_summary(fun.data="mean_se")+
stat_summary(fun.data="mean_se", geom='line')+
theme_bw()+theme(panel.grid=element_blank())+
labs(caption = "Accuracy improves at position 5 (but not at other positions) when it is prioritised versus when it is not prioritised")
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
g1=ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
facet_wrap(~suffix)+
stat_summary(fun.data="mean_se")+
stat_summary(fun.data="mean_se", geom='line')+
theme_bw()+theme(panel.grid=element_blank())+
labs(caption = "Accuracy improves at position 5 (but not at other positions) when it is prioritised versus when it is not prioritised")
print(g1)
d=din %>%
rename(participant=PS) %>%
rename(block=Block) %>%
separate_wider_delim(Condition, names=c("priority", "suffix"), delim="/") %>%
mutate(suffix=tolower(suffix)) %>%
mutate(priority=tolower(priority)) %>%
mutate(suffix=str_replace(suffix, " ", "_")) %>%
mutate(priority=str_replace(priority, " ", "_")) %>%
group_by(participant) %>%
mutate(trial=seq_along(participant)) %>%
ungroup() %>%
mutate(trial=as_factor(trial)) %>%
relocate(participant, block, trial) %>%
pivot_longer(cols=c(Accuary_SP1, Accuary_SP2, Accuary_SP3, Accuary_SP4, Accuary_SP5, Accuary_SP6), values_to="accuracy", names_to="serial_position") %>%
mutate(serial_position = readr::parse_number(serial_position)) %>%
mutate(participant=as_factor(participant)) %>%
#mutate(block=as_factor(block)) %>%
#mutate(serial_position=as_factor(serial_position))
mutate(priority = factor(priority, levels=c("no_priority", "p5"), labels=c("PriorityNone", "PriorityPos5"))) %>%
mutate(suffix = factor(suffix, levels=c("no_suffix", "suffix"), labels=c("SuffAbsent", "SuffPresent")))
view(d)
g1=ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
facet_wrap(~suffix)+
stat_summary(fun.data="mean_se")+
stat_summary(fun.data="mean_se", geom='line')+
theme_bw()+theme(panel.grid=element_blank())+
labs(caption = "Accuracy improves at position 5 (but not at other positions) when it is prioritised versus when it is not prioritised")
print(g1)
source("~/gits/daisy/script1.R")
source("~/gits/daisy/script1.R")
print(summary(m1))
# try to capture the interaction of serial_position and priority
m1=lmerTest::lmer(data=d,
accuracy ~ block + suffix + serial_position + priority + serial_position:priority
(1 + serial_position + priority + serial_position:priority | participant) +
(1 | trial)
)
# try to capture the interaction of serial_position and priority
m1=lmerTest::lmer(data=d,
accuracy ~ block + suffix + serial_position + priority + serial_position:priority +
(1 + serial_position + priority + serial_position:priority | participant) +
(1 | trial)
)
# try to emphasise the interaction of serial_position and priority
m1=lmerTest::lmer(data=d,
accuracy ~ block + suffix +
serial_position + priority + serial_position:priority +
(1 | participant) +
(1 | trial)
)
print(summary(m1))
ggplot(data=d, aes(y=accuracy, x=serial_position, colour=priority))+
facet_wrap(~suffix)+
stat_summary(fun.data="mean_se")+
stat_summary(fun.data="mean_se", geom='line')+
theme_bw()+
theme(panel.grid=element_blank())+
scale_x_continuous(breaks=1:6)+
labs(title = "Accuracy improves at position 5 (but not at other positions)\n when it is prioritised versus when it is not prioritised")
m1$coef
m1@coef
str(m1)
coef(m1)
fixed(m1)
coef(summary(m1))
coef(summary(m1)) %>% kable()
library(knitr)
coef(summary(m1)) %>% kable()
coef(summary(m1))
result = coef(summary(m1)) %>% as_tibble()
rersult
result
result = coef(summary(m1)) %>% as_tibble() %>%
rename(p=`Pr(>|t|)`)
result
mutate(sig=ifelse(p<.001, "***"))
result = coef(summary(m1)) %>% as_tibble() %>%
rename(p=`Pr(>|t|)`) %>%
mutate(sig=ifelse(p<.001, "***"))
result = coef(summary(m1)) %>% as_tibble() %>%
rename(p=`Pr(>|t|)`) %>%
mutate(sig=ifelse(p<.001, "***", ""))
result
result = coef(summary(m1)) %>% as_tibble() %>%
rename(p=`Pr(>|t|)`) %>%
mutate(sig=ifelse(p<.001, "***", ifelse(p<.01, "**", ifelse(p<0.05, "*", ""))))
result
coef(summary(m1))
coef(summary(m1)) %>% as_tibble(row.names=T)
?as_tibble
coef(summary(m1)) %>% as_tibble(rownames="effect")
result = coef(summary(m1)) %>% as_tibble(rownames="effect") %>%
rename(p=`Pr(>|t|)`) %>%
mutate(sig=ifelse(p<.001, "***", ifelse(p<.01, "**", ifelse(p<0.05, "*", ""))))
kable(result)
kable(result)
kable(result, digits = 3)
m2 = lmerTest::lmer(data=d,
accuracy ~ block + suffix +
serial_position + priority +
(1 | participant) +
(1 | trial)
)
m2
summary(m2)
summary(m2)
# build the actual model
m3 = lmerTest::lmer(data=d,
accuracy ~ block +
suffix * serial_position * priority +
(1 | participant) +
(1 | trial)
)
# just some visual formatting
result_m3 = coef(summary(m2)) %>% as_tibble(rownames="effect") %>%
rename(p=`Pr(>|t|)`) %>%
mutate(sig=ifelse(p<.001, "***", ifelse(p<.01, "**", ifelse(p<0.05, "*", ""))))
# show a table
kable(result_m3, digits=3)
m3
summary(m3)
# just some visual formatting
result_m3 = coef(summary(m3)) %>% as_tibble(rownames="effect") %>%
rename(p=`Pr(>|t|)`) %>%
mutate(sig=ifelse(p<.001, "***", ifelse(p<.01, "**", ifelse(p<0.05, "*", ""))))
# show a table
kable(result_m3, digits=3)
# build the actual model
m3 = lmerTest::lmer(data=d,
accuracy ~ block +
suffix + serial_position + priority +
serial_position:priority+
suffix:serial_position:priority
(1 | participant) +
(1 | trial)
)
# build the actual model
m3 = lmerTest::lmer(data=d,
accuracy ~ block +
suffix + serial_position + priority +
serial_position:priority+
suffix:serial_position:priority+
(1 | participant) +
(1 | trial)
)
# just some visual formatting
result_m3 = coef(summary(m3)) %>% as_tibble(rownames="effect") %>%
rename(p=`Pr(>|t|)`) %>%
mutate(sig=ifelse(p<.001, "***", ifelse(p<.01, "**", ifelse(p<0.05, "*", ""))))
# show a table
kable(result_m3, digits=3)
source("~/.active-rstudio-document", echo=TRUE)
